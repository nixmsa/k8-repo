9. Output the yaml file of the pod you just created without the cluster-specific information
kubectl get pods nginx -o yaml --export
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.16.122.93/32
      cni.projectcalico.org/podIPs: 172.16.122.93/32
    creationTimestamp: "2020-09-20T17:23:33Z"
    labels:
      run: multi-cond-pod
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:run: {}
        f:spec:
          f:containers:
            k:{"name":"main-container"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sidecar-container"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":80,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/usr/share/nginx/html"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"var-logs"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kubectl
      operation: Update
      time: "2020-09-20T17:23:33Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2020-09-20T18:10:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.122.93"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2020-09-20T19:08:06Z"
    name: multi-cond-pod
    namespace: default
    resourceVersion: "164266"
    selfLink: /api/v1/namespaces/default/pods/multi-cond-pod
    uid: c52fded5-169f-4735-94ca-aed9d140847d
  spec:
    containers:
    - args:
      - sleep 5555
      image: busybox
      imagePullPolicy: Always
      name: main-container
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: var-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-ml2mr
        readOnly: true
    - image: nginx
      imagePullPolicy: Always
      name: sidecar-container
      ports:
      - containerPort: 80
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/share/nginx/html
        name: var-logs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-ml2mr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-node-1.example.com
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: var-logs
    - name: default-token-ml2mr
      secret:
        defaultMode: 420
        secretName: default-token-ml2mr
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-09-20T17:23:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-09-20T17:23:34Z"
      message: 'containers with unready status: [main-container]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-09-20T17:23:34Z"
      message: 'containers with unready status: [main-container]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-09-20T17:23:33Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://f2bc17d0dc40dda5b4fd906bb104ff5ac864b19fdf25577f1f41feb3e9c403df
      image: busybox:latest
      imageID: docker-pullable://busybox@sha256:d366a4665ab44f0648d7a00ae3fae139d55e32f9712c67accd604bb55df9d05a
      lastState:
        terminated:
          containerID: docker://f2bc17d0dc40dda5b4fd906bb104ff5ac864b19fdf25577f1f41feb3e9c403df
          exitCode: 127
          finishedAt: "2020-09-20T19:07:48Z"
          message: 'OCI runtime create failed: container_linux.go:349: starting container
            process caused "exec: \"sleep 5555\": executable file not found in $PATH":
            unknown'
          reason: ContainerCannotRun
          startedAt: "2020-09-20T19:07:48Z"
      name: main-container
      ready: false
      restartCount: 27
      started: false
      state:
        waiting:
          message: back-off 5m0s restarting failed container=main-container pod=multi-cond-pod_default(c52fded5-169f-4735-94ca-aed9d140847d)
          reason: CrashLoopBackOff
    - containerID: docker://fd0836d9d1eb739da5bfc3384d61825dab2225dfccb2351cf9cc21b47b68bd27
      image: nginx:latest
      imageID: docker-pullable://nginx@sha256:9a1f8ed9e2273e8b3bbcd2e200024adac624c2e5c9b1d420988809f5c0c41a5e
      lastState:
        terminated:
          containerID: docker://366de3d511b604214d580325cab30a7fcc33d20a17041a4fa3e8d9d76f4aa821
          exitCode: 255
          finishedAt: "2020-09-20T18:09:03Z"
          reason: Error
          startedAt: "2020-09-20T17:23:38Z"
      name: sidecar-container
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2020-09-20T18:10:30Z"
    hostIP: 192.168.0.42
    phase: Running
    podIP: 172.16.122.93
    podIPs:
    - ip: 172.16.122.93
    qosClass: BestEffort
    startTime: "2020-09-20T17:23:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.16.122.94/32
      cni.projectcalico.org/podIPs: 172.16.122.94/32
    creationTimestamp: "2020-09-20T18:13:19Z"
    labels:
      run: nginx
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:run: {}
        f:spec:
          f:containers:
            k:{"name":"nginx"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kubectl
      operation: Update
      time: "2020-09-20T18:13:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2020-09-20T18:13:20Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.122.94"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2020-09-20T18:13:23Z"
    name: nginx
    namespace: default
    resourceVersion: "157672"
    selfLink: /api/v1/namespaces/default/pods/nginx
    uid: b93a8b22-cbcb-4df8-83bc-5b132dd7a67a
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-ml2mr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-node-1.example.com
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-ml2mr
      secret:
        defaultMode: 420
        secretName: default-token-ml2mr
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-09-20T18:13:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-09-20T18:13:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-09-20T18:13:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-09-20T18:13:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://14187659f2628e1fd072443dfe230e1409c2d4a6277918f63395dfe3ab0c1524
      image: nginx:latest
      imageID: docker-pullable://nginx@sha256:9a1f8ed9e2273e8b3bbcd2e200024adac624c2e5c9b1d420988809f5c0c41a5e
      lastState: {}
      name: nginx
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-09-20T18:13:23Z"
    hostIP: 192.168.0.42
    phase: Running
    podIP: 172.16.122.94
    podIPs:
    - ip: 172.16.122.94
    qosClass: BestEffort
    startTime: "2020-09-20T18:13:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.16.182.38/32
      cni.projectcalico.org/podIPs: 172.16.182.38/32
    creationTimestamp: "2020-09-20T17:24:34Z"
    generateName: nginx01-67fdf8d7c7-
    labels:
      app: nginx01
      pod-template-hash: 67fdf8d7c7
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2a97f84b-5625-4ebd-acc0-f4bb62fbf622"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:containers:
            k:{"name":"nginx"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2020-09-20T17:24:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2020-09-20T18:10:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.182.38"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2020-09-20T18:10:30Z"
    name: nginx01-67fdf8d7c7-4nd29
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx01-67fdf8d7c7
      uid: 2a97f84b-5625-4ebd-acc0-f4bb62fbf622
    resourceVersion: "157237"
    selfLink: /api/v1/namespaces/default/pods/nginx01-67fdf8d7c7-4nd29
    uid: 91912e7f-e3f5-4bd5-af81-2489bfd67363
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-ml2mr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-node-0.example.com
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-ml2mr
      secret:
        defaultMode: 420
        secretName: default-token-ml2mr
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-09-20T17:24:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-09-20T18:10:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-09-20T18:10:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-09-20T17:24:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://81e26ca781bbf44af96fdd1a469d5e5c405b9b27795cd4e88aa6fc61de6b9bd2
      image: nginx:latest
      imageID: docker-pullable://nginx@sha256:9a1f8ed9e2273e8b3bbcd2e200024adac624c2e5c9b1d420988809f5c0c41a5e
      lastState:
        terminated:
          containerID: docker://16426f6d4894cd84d0e783e17ff4181743c5440db205fe63950dc1c7a70d5c76
          exitCode: 255
          finishedAt: "2020-09-20T18:09:01Z"
          reason: Error
          startedAt: "2020-09-20T17:24:36Z"
      name: nginx
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2020-09-20T18:10:30Z"
    hostIP: 192.168.0.41
    phase: Running
    podIP: 172.16.182.38
    podIPs:
    - ip: 172.16.182.38
    qosClass: BestEffort
    startTime: "2020-09-20T17:24:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/podIP: 172.16.182.39/32
      cni.projectcalico.org/podIPs: 172.16.182.39/32
    creationTimestamp: "2020-09-20T18:24:45Z"
    labels:
      run: nginx02
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:run: {}
        f:spec:
          f:containers:
            k:{"name":"nginx02"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kubectl
      operation: Update
      time: "2020-09-20T18:24:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      time: "2020-09-20T18:24:47Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"172.16.182.39"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2020-09-20T18:24:51Z"
    name: nginx02
    namespace: default
    resourceVersion: "159288"
    selfLink: /api/v1/namespaces/default/pods/nginx02
    uid: 280c9f85-d8d3-4c39-941f-a0aa391b9f5c
  spec:
    containers:
    - image: nginx
      imagePullPolicy: Always
      name: nginx02
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-ml2mr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: k8s-node-0.example.com
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-ml2mr
      secret:
        defaultMode: 420
        secretName: default-token-ml2mr
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-09-20T18:24:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-09-20T18:24:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-09-20T18:24:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-09-20T18:24:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://6ff342645058ef5f8003f2c4891dae727a89a2b5de3c7e5f1508b35297df1a3a
      image: nginx:latest
      imageID: docker-pullable://nginx@sha256:9a1f8ed9e2273e8b3bbcd2e200024adac624c2e5c9b1d420988809f5c0c41a5e
      lastState: {}
      name: nginx02
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2020-09-20T18:24:50Z"
    hostIP: 192.168.0.41
    phase: Running
    podIP: 172.16.182.39
    podIPs:
    - ip: 172.16.182.39
    qosClass: BestEffort
    startTime: "2020-09-20T18:24:45Z"
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
